{"version":3,"sources":["static/images/background.png","static/images/profile.jpg","components/header/index.jsx","components/profile/index.jsx","static/json/experiences.js","components/experience/index.jsx","static/json/skills.js","components/skills/index.jsx","static/json/projects.js","components/projects/index.jsx","static/json/educations.js","components/education/index.jsx","components/common/ScrollTop.jsx","components/resume/index.jsx","serviceWorker.js","index.js"],"names":["module","exports","Header","classes","this","props","AppBar","className","appBar","Toolbar","toolBar","Typography","variant","title","id","Component","withStyles","theme","backgroundColor","top","bottom","flexGrow","color","font","button","Profile","Container","root","Grid","container","direction","gridContainer","item","xs","sm","md","CardMedia","component","img","image","profile","alt","List","profileList","ListItem","ListItemText","disableTypography","primary","secondary","social","socialList","ListItemIcon","Link","href","target","rel","style","fixed","summaryContainer","Box","summaryBoxDiv","summarySpan","summaryParagraph","backgroundImage","background","paddingTop","margin","width","height","maxWidth","maxHeight","minHeight","textAlign","padding","position","experiences","Experience","text","map","experience","index","key","gridItem","Card","cardRoot","elevation","CardContent","border","details","startDate","endDate","Divider","orientation","flexItem","cardContent","company","location","highlights","highlight","dense","disableGutters","alignItems","spacing","textTransform","display","flexDirection","flex","skills","BorderLinearProgress","borderRadius","colorPrimary","palette","grey","type","bar","LinearProgress","Skills","skill","CardHeader","name","cardHeader","keywords","keyword","value","level","projects","Projects","project","description","Paper","paper","Chip","label","chip","justifyContent","flexWrap","listStyle","educations","Education","education","studyType","area","institution","useStyles","makeStyles","right","ScrollTop","children","window","trigger","useScrollTrigger","undefined","disableHysteresis","threshold","Zoom","in","onClick","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","Resume","CssBaseline","Fab","size","aria-label","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7b89e480.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.9a93f99c.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.a76c8cf6.jpg\";","import React, { Component, Fragment } from \"react\";\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n// import Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n    appBar: {\n        backgroundColor: 'rgba(255, 255, 255, 1)',\n        top: 0,\n        bottom: 'auto',\n    },\n    toolBar: {\n        // minHeight: '100px',\n    },\n    title: {\n        flexGrow: 1,\n        color: '#182153',\n        font: 'normal normal normal 30px/1.4em avenir-lt-w01_35-light1475496,sans-serif',\n    },\n    button: {\n        color: '#182153'\n    }\n});\n\nclass Header extends Component {\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Fragment>\n                <AppBar className={classes.appBar}>\n                    <Toolbar className={classes.toolBar}>\n                        <Typography variant=\"h6\" className={classes.title}>Suryakumar K</Typography>\n                        {/* <Button className={classes.button}>Experience</Button>\n                        <Button className={classes.button}>Skills</Button>\n                        <Button className={classes.button}>Projects</Button>\n                        <Button className={classes.button}>Education</Button>\n                        <Button className={classes.button}>Contact</Button> */}\n                    </Toolbar>\n                </AppBar>\n                <Toolbar id=\"back-to-top-anchor\" />\n            </Fragment>\n        )\n    }\n}\n\nexport default withStyles(styles)(Header);","import React, { Component, Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { ListItemIcon } from '@material-ui/core';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport background from '../../static/images/background.png';\nimport profile from '../../static/images/profile.jpg';\n\nconst styles = () => ({\n    root: {\n        backgroundImage: `url(${background})`,\n        flexGrow: 1,\n        paddingTop: 40,\n    },\n    gridContainer: {\n        margin: 'auto',\n        width: 650,\n        height: '100%',\n        maxWidth: '100%',\n        maxHeight: '100%',\n        backgroundColor: 'rgba(241, 241, 241, 1)',\n    },\n    img: {\n        maxHeight: '100%',\n        minHeight: 400\n    },\n    profileList: {\n        margin: '0 0 0 50px',\n    },\n    social: {\n        minHeight: 50,\n        backgroundColor: 'rgba(24, 33, 83, 1)'\n    },\n    socialList: {\n        textAlign: 'center'\n    },\n    summaryContainer: {\n        flexGrow: 1,\n        backgroundColor: 'rgba(241, 241, 241, 1)',\n        textAlign: 'center',\n        padding: 50,\n        minHeight: 250\n    },\n    summaryBoxDiv: {\n        position: 'relative'\n    },\n    summarySpan: {\n        font: 'normal normal normal 30px/1.4em avenir-lt-w01_35-light1475496,sans-serif',\n        color: '#182153'\n    },\n    summaryParagraph: {\n        font: 'normal normal normal 18px/1.4em avenir-lt-w01_35-light1475496,sans-serif',\n        color: '#182153'\n    }\n});\n\nclass Profile extends Component {\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Fragment>\n                <Container className={classes.root}>\n                    <Grid container direction='column' className={classes.gridContainer}>\n                        <Grid item container direction='row'>\n                            <Grid item xs sm md>\n                                <CardMedia\n                                    component=\"img\"\n                                    className={classes.img}\n                                    image={profile}\n                                    title='Suryakumar K'\n                                    alt='Suryakumar K'\n                                />\n                            </Grid>\n                            <Grid item xs sm md>\n                                <List className={classes.profileList}>\n                                    <ListItem>\n                                        <ListItemText disableTypography\n                                            primary={<Typography variant=\"h4\" color=\"primary\"> Suryakumar K </Typography>}\n                                            secondary={<Typography variant=\"subtitle2\" color=\"textSecondary\"> Application Developer </Typography>}\n                                        />\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText primary=\"Phone:\" secondary=\"9444379321\" />\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText primary=\"Email:\" secondary=\"ksuryakumar@outlook.in\" />\n                                    </ListItem>\n                                    {/* <ListItem>\n                                        <ListItemText primary=\"Date of Birth:\" secondary=\"May 20th, 1993\" />\n                                    </ListItem> */}\n                                    <ListItem>\n                                        <ListItemText primary=\"Location:\" secondary=\"Chennai, TN, India\" />\n                                    </ListItem>\n                                </List>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs sm md className={classes.social}>\n                            <List className={classes.socialList}>\n                                <ListItemIcon >\n                                    <Link href={`https://www.linkedin.com/in/surya-kumar-k-45559343/`} target=\"_blank\" rel=\"noreferrer\"> <LinkedInIcon style={{ color: 'white' }} /> </Link>\n                                </ListItemIcon >\n                                <ListItemIcon >\n                                    <Link href={`https://join.skype.com/invite/XPcju6prFQH1`} target=\"_blank\" rel=\"noreferrer\"> <ChatBubbleOutlineIcon style={{ color: 'white' }} /> </Link>\n                                </ListItemIcon >\n                            </List>\n                        </Grid>\n                    </Grid>\n                </Container>\n                <Container fixed className={classes.summaryContainer}>\n                    <Box component='div' className={classes.summaryBoxDiv} >\n                        <Box component=\"span\" className={classes.summarySpan}>\n                            Hello! I'm Suryakumar\n                        </Box>\n                        <Box component='p' className={classes.summaryParagraph}>\n                            Software Engineer with 4+ years of experience. Interested in Machine Learning, NLP, learning new technologies, and tools.\n\n                            Here is my tech stack: Python, Javascript, MongoDB, Apache Cassandra, MySQL, PostgreSQL, Hadoop, Apache Kafka, Apache Spark, RabbitMQ, and Docker.\n\n                            Having experience in various frameworks and libraries like Django, Django Rest, flask, React.\n\n                            Also having knowledge in the DevOps, TDD, Agile, Microservices.\n\n                            Gucci!!!\n                        </Box>\n                    </Box>\n                </Container>\n            </Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(Profile);","export const experiences = [\n    {\n        \"company\": \"CONTUS\",\n        \"location\": \"Chennai\",\n        \"position\": \"Application Developer \",\n        \"website\": \"\",\n        \"startDate\": \"Nov 2018\",\n        \"highlights\": [\n            \"Plan, develop and implement successful large-scale projects from conception to completion\",\n            \"Ability to understand/comment on functional requirements and design documents\",\n            \"Involved in analysis, design, and development, customization, testing and troubleshooting\",\n            \"Project handling on all phases of the development life cycle, from analysis to deployment on the production environment, to post-release support\",\n            \"Communicating with the client team, mobile and web team for the development, integration and troubleshooting\",\n        ],\n        \"endDate\": \"Present\"\n    },\n    {\n        \"company\": \"AMTEX SYSTEMS\",\n        \"location\": \"Chennai\",\n        \"position\": \"Application Programmer \",\n        \"website\": \"\",\n        \"startDate\": \"May 2016\",\n        \"highlights\": [\n            \"Communicating with the clients to gather requirements, and preparing SRS Document with sequence flow\",\n            \"Involved in analysis, design, and development, customization, testing and troubleshooting\",\n            \"Plan, develop and implement successful large-scale projects from conception to completion\",\n            \"Handling migrations form alpha and 1.0 version CMS to 2.0\",\n            \"Analysing and implementing ETL process through python scripts\",\n            \"Involving and handling all phases of the development life cycle, from SRS to product delivery, and post-release support\",\n        ],\n        \"endDate\": \"Nov 2018\"\n    }\n]","import React, { Component, Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { experiences } from '../../static/json/experiences';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: 'white',\n    },\n    text: {\n        padding: theme.spacing(3, 0, 3),\n        textTransform: 'uppercase',\n        textAlign: 'center',\n    },\n    gridItem: {\n        margin: 'auto',\n        width: 850,\n        height: '100%',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    cardRoot: {\n        display: 'flex',\n        width: '100%',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'end',\n        width: '50%',\n    },\n    cardContent: {\n        flex: '1 0 auto',\n        width: '50%',\n    }\n});\n\nclass Experience extends Component {\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Fragment>\n                <Container className={classes.root}>\n                    <Typography className={classes.text} variant='h5'>\n                        Experience\n                    </Typography>\n                </Container>\n                <Container className={classes.root}>\n                    <List>\n                        {experiences.map((experience, index) => {\n                            return (\n                                <ListItem key={index} className={classes.gridItem}>\n                                    <Card className={classes.cardRoot} elevation={0}>\n                                        <CardContent border={0} className={classes.details}>\n                                            <Typography component='h5' variant='h5'>{`${experience.startDate} - ${experience.endDate}`}</Typography>\n                                            <Typography variant='subtitle1' color='textSecondary'>{experience.position}</Typography>\n                                        </CardContent>\n                                        <Divider orientation='vertical' flexItem />\n                                        <CardContent border={0} className={classes.cardContent}>\n                                            <Typography component='h5' variant='h5'>{`${experience.company}, ${experience.location}`}</Typography>\n                                            <Typography variant='subtitle1' color='textSecondary'>\n                                                <List component=\"ul\">\n                                                    {experience.highlights.map((highlight, key) => {\n                                                        return (\n                                                            <ListItem key={key} dense disableGutters alignItems='flex-start'>\n                                                                <ListItemText primary={`${highlight}`} />\n                                                            </ListItem>\n                                                        )\n                                                    })}\n                                                </List>\n                                            </Typography>\n                                        </CardContent>\n                                    </Card>\n                                </ListItem>\n                            )\n                        })}\n                    </List>\n                </Container>\n            </Fragment >\n        );\n    }\n}\n\nexport default withStyles(styles)(Experience);","export const skills = [\n    {\n        \"level\": \"\",\n        \"keywords\": [\n            {\n                \"name\": \"Python\",\n                \"level\": 80\n            },\n            {\n                \"name\": \"Javascript\",\n                \"level\": 65\n            }\n        ],\n        \"name\": \"Programming Languages\"\n    },\n    {\n        \"keywords\": [\n            {\n                \"name\": \"MongoDB\",\n                \"level\": 75\n            },\n            {\n                \"name\": \"PostgreSQL\",\n                \"level\": 75\n            },\n            {\n                \"name\": \"MySQL\",\n                \"level\": 75\n            },\n            {\n                \"name\": \"Apache Hive\",\n                \"level\": 30\n            },\n            {\n                \"name\": \"Apache Hadoop\",\n                \"level\": 75\n            },\n            {\n                \"name\": \"Apache Cassandra\",\n                \"level\": 60\n            },\n            {\n                \"name\": \"HBase\",\n                \"level\": 20\n            }\n        ],\n        \"name\": \"Databases and Data warehouse\"\n    },\n    {\n        \"keywords\": [\n            {\n                \"name\": \"Django REST\",\n                \"level\": 70\n            },\n            {\n                \"name\": \"React\",\n                \"level\": 65\n            },\n            {\n                \"name\": \"Flask\",\n                \"level\": 55\n            },\n        ],\n        \"name\": \"Framework & Library\"\n    },\n    {\n        \"keywords\": [\n            {\n                \"name\": \"Apache Kafka\",\n                \"level\": 70\n            },\n            {\n                \"name\": \"Apache Spark\",\n                \"level\": 55\n            }\n        ],\n        \"name\": \"Streaming Technologies\"\n    },\n    {\n        \"keywords\": [\n            {\n                \"name\": \"GIT\",\n                \"level\": 90\n            },\n            {\n                \"name\": \"Docker\",\n                \"level\": 65\n            },\n        ],\n        \"name\": \"DevOps Tools\"\n    },\n    {\n        \"keywords\": [\n            {\n                \"name\": \"TDD\",\n                \"level\": null\n            },\n            {\n                \"name\": \"Microservices\",\n                \"level\": null\n            },\n        ],\n        \"name\": \"Others\"\n    }\n]","import React, { Component, Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Typography from '@material-ui/core/Typography';\nimport { skills } from '../../static/json/skills';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: 'white',\n    },\n    text: {\n        padding: theme.spacing(3, 0, 3),\n        textTransform: \"uppercase\",\n        textAlign: 'center',\n    },\n    cardRoot: {\n        width: '100%',\n        height: '100%',\n    },\n    cardHeader: {\n        minHeight: 100\n    }\n});\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n      height: 5,\n      borderRadius: 2,\n    },\n    colorPrimary: {\n      backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n      borderRadius: 2,\n      backgroundColor: '#1a90ff',\n    },\n  }))(LinearProgress);\n  \n\nclass Skills extends Component {\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Fragment>\n                <Container className={classes.root}>\n                    <Typography className={classes.text} variant=\"h5\">\n                        Skills\n                    </Typography>\n                </Container>\n                <Container className={classes.root}>\n                    <Grid container>\n                        {skills.map((skill, index) => {\n                            return (\n                                <Grid key={index} item xs sm md>\n                                    <Card className={classes.cardRoot}>\n                                        <CardHeader title={skill.name} className={classes.cardHeader} />\n                                        <CardContent>\n                                            <Grid container direction=\"column\" spacing={1}>\n                                                {skill.keywords.map((keyword, key) => {\n                                                    return (\n                                                        <Fragment key={key}>\n                                                            <Grid item xs sm md>\n                                                                <Typography variant=\"subtitle1\">\n                                                                    {keyword.name}\n                                                                </Typography>\n                                                            </Grid>\n                                                            <Grid item xs sm md>\n                                                                <BorderLinearProgress \n                                                                    variant=\"determinate\"\n                                                                    value={keyword.level}\n                                                                />\n                                                            </Grid>\n                                                        </Fragment>\n                                                    )\n                                                })}\n                                            </Grid>\n                                        </CardContent>\n                                    </Card>\n                                </Grid>\n                            )\n                        })}\n                    </Grid>\n                </Container>\n            </Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(Skills);","export const projects = [\n    {\n        \"name\": \"BotChatAI\",\n        \"keywords\": [\n            \"ML\",\n            \"RASA NLU\",\n            \"spaCy\",\n            \"Flask\",\n            \"ReactJs\",\n            \"MongoDB\"\n        ],\n        \"description\": \"BotChatAI is a Conversational AI and Digital UX Virtual Assistant Platform and Solutions.\"\n    },\n    {\n        \"name\": \"Versa Titan  (SD-WAN)\",\n        \"keywords\": [\n            \"Python\",\n            \"Django\",\n            \"Djangorestframework 3\",\n            \"ReactJs\",\n            \"MongoDB\",\n            \"Apache Kafka\"\n        ],\n        \"description\": \"Versa Titan is a Cloud Managed SD-WAN & SD-Security solution that provides IT with cloud-agility, simplifying the design, deployment, and operations of WAN. Developing a Network Device with software to control the entire branch network LAN, WAN, Enable security and monitoring. This application will be supporting Multi-language including Arabic language.\"\n    },\n    {\n        \"name\": \"IoT Engine\",\n        \"keywords\": [\n            \"Django 2\",\n            \"Djangorestframework 3\",\n            \"Python\",\n            \"MongoDB\",\n            \"ReactJs\",\n            \"Apache Kafka\",\n            \"Apache Spark\",\n        ],\n        \"description\": \"IoT Engine will monitor the sensor device process and send an alert every time a problem occurs during this process. Monitoring systems and sensors will help with solving these problems and to make data-informed decisions and take corrective actions to avoid damaging.  The use of sensors will greatly improve the quality and speed of the production process, the same IoT engine will read sensor metrics data and update it into the monitoring system within a short span of time.\"\n    },\n    {\n        \"name\": \"MODE v2.0\",\n        \"keywords\": [\n            \"Django 1.8\",\n            \"Python\",\n            \"Postgresql\",\n            \"HTML\",\n            \"CSS\",\n            \"jQuery\",\n            \"Java Script\",\n            \"Ajax\"\n        ],\n        \"description\": \"Fashion and media agencies, THE MODE Saas platform is used by world's top fashion and media agencies to manage their digital content.\"\n    },\n    {\n        \"name\": \"MODE v1.0\",\n        \"keywords\": [\n            \"Django 1.3\",\n            \"Python\",\n            \"MySQL\",\n            \"HTML\",\n            \"CSS\",\n            \"jQuery\",\n            \"Java Script\",\n            \"Ajax\"\n        ],\n        \"description\": \"Fashion and media agencies, THE MODE Saas platform is used by world's top fashion and media agencies to manage their digital content.\"\n    }\n    \n    \n]","import React, { Component, Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport { projects } from '../../static/json/projects';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: 'white',\n    },\n    text: {\n        padding: theme.spacing(3, 0, 3),\n        textTransform: \"uppercase\",\n        textAlign: 'center',\n    },\n    gridItem: {\n        margin: 'auto',\n        width: 850,\n        height: '100%',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    cardRoot: {\n        display: 'flex',\n        width: '100%',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'end',\n        width: '50%',\n    },\n    cardContent: {\n        width: '50%',\n    },\n    paper: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(0.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n});\n\nclass Projects extends Component {\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Fragment>\n                <Container className={classes.root}>\n                    <Typography className={classes.text} variant=\"h5\">\n                        Projects\n                    </Typography>\n                </Container>\n                <Container className={classes.root}>\n                    <List>\n                        {projects.map((project, index) => {\n                            return (\n                                <ListItem key={index} className={classes.gridItem}>\n                                    <Card className={classes.cardRoot} elevation={0}>\n                                        <CardContent border={0} className={classes.details}>\n                                            <Typography component='h6' variant='h6'>{project.name}</Typography>\n                                        </CardContent>\n                                        <Divider orientation='vertical' flexItem />\n                                        <CardContent border={0} className={classes.cardContent}>\n                                            <Typography variant='subtitle2' color='textSecondary'>{project.description}</Typography>\n                                            <Paper elevation={0} component=\"ul\" className={classes.paper}>\n                                                {project.keywords.map((keyword, key) => {\n                                                    return (\n                                                        <Box component='li' key={key}>\n                                                            <Chip label={keyword} className={classes.chip}/>\n                                                        </Box>\n                                                    )\n                                                })}\n                                            </Paper>\n                                        </CardContent>\n                                    </Card>\n                                </ListItem>\n                            )\n                        })}\n                    </List>\n                </Container>\n            </Fragment >\n        );\n    }\n}\n\nexport default withStyles(styles)(Projects);","export const educations = [\n    {\n        \"studyType\": \"MCA\",\n        \"endDate\": \"2016\",\n        \"institution\": \"SRM Valliammai Engineering College\",\n        \"location\": \"Kattankulathur\",\n        \"area\": \"Computer Science\",\n        \"startDate\": \"2014\"\n    },\n    {\n        \"institution\": \"Pachiyappa's College For Men\",\n        \"location\": \"Kanchipuram\",\n        \"studyType\": \"BCA\",\n        \"area\": \"Computer Science\",\n        \"startDate\": \"2011\",\n        \"endDate\": \"2014\"\n    }\n]","import React, { Component, Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { educations } from '../../static/json/educations';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: 'white',\n    },\n    text: {\n        padding: theme.spacing(3, 0, 3),\n        textTransform: \"uppercase\",\n        textAlign: 'center',\n    },\n    gridItem: {\n        margin: 'auto',\n        width: 850,\n        height: '100%',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    cardRoot: {\n        display: 'flex',\n        width: '100%',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'end',\n        width: '50%',\n    },\n    cardContent: {\n        width: '50%',\n    }\n});\n\nclass Education extends Component {\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Fragment>\n                <Container className={classes.root}>\n                    <Typography className={classes.text} variant=\"h5\">\n                        Education\n                    </Typography>\n                </Container>\n                <Container className={classes.root}>\n                    <List>\n                        {educations.map((education, index) => {\n                            return (\n                                <ListItem key={index} className={classes.gridItem}>\n                                    <Card className={classes.cardRoot} elevation={0}>\n                                        <CardContent border={0} className={classes.details}>\n                                            <Typography component='h5' variant='h5'>{`${education.startDate} - ${education.endDate}`}</Typography>\n                                            <Typography variant='subtitle1' color='textSecondary'>{`${education.studyType} in ${education.area}`}</Typography>\n                                        </CardContent>\n                                        <Divider orientation='vertical' flexItem />\n                                        <CardContent border={0} className={classes.cardContent}>\n                                            <Typography component='h6' variant='h6'>{`${education.institution}`}</Typography>\n                                            <Typography variant='subtitle1' color='textSecondary'>{education.location}</Typography>\n                                            {/* <Typography variant='subtitle2' color='textSecondary'>{`GPA: ${education.gpa}`}</Typography> */}\n                                        </CardContent>\n                                    </Card>\n                                </ListItem>\n                            )\n                        })}\n                    </List>\n                </Container>\n            </Fragment >\n        );\n    }\n}\n\nexport default withStyles(styles)(Education);","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Zoom from '@material-ui/core/Zoom';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n    },\n}));\n\nexport default function ScrollTop(props) {\n    const { children, window } = props;\n    const classes = useStyles();\n    // Note that you normally won't need to set the window ref as useScrollTrigger\n    // will default to window.\n    // This is only being set here because the demo is in an iframe.\n    const trigger = useScrollTrigger({\n        target: window ? window() : undefined,\n        disableHysteresis: true,\n        threshold: 100,\n    });\n\n    const handleClick = (event) => {\n        const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\n\n        if (anchor) {\n            anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        }\n    };\n\n    return (\n        <Zoom in={trigger}>\n            <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n                {children}\n            </div>\n        </Zoom>\n    );\n}\n\nScrollTop.propTypes = {\n    children: PropTypes.element.isRequired,\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n    window: PropTypes.func,\n};","import React, { Component, Fragment } from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Header from '../header';\nimport Profile from '../profile';\nimport Experience from '../experience';\nimport Skills from '../skills';\nimport Projects from '../projects';\nimport Education from '../education';\nimport ScrollTop from '../common/ScrollTop';\n\nclass Resume extends Component {\n\n    render() {\n        return (\n            <Fragment>\n                <CssBaseline />\n                <Header />\n                <Profile />\n                <Experience />\n                <Projects />\n                <Skills />\n                <Education />\n                <ScrollTop {...this.props}>\n                    <Fab color=\"primary\" size=\"small\" aria-label=\"scroll back to top\">\n                        <KeyboardArrowUpIcon />\n                    </Fab>\n                </ScrollTop>\n            </Fragment>\n        )\n    }\n}\n\nexport default Resume;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Resume from './components/resume';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Resume />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}